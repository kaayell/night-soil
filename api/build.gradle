buildscript {
    ext.kotlin_version = '1.1.51'
	ext.junitVintageVersion  = '4.12.1'
	ext.junitPlatformVersion = '1.0.1'
	ext.junitJupiterVersion  = '5.0.1'

    ext {
		springBootVersion = '1.5.8.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.junit.platform.gradle.plugin'

group = 'com.excrement'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.flywaydb:flyway-core')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
	compile 'org.springframework.cloud:spring-cloud-spring-service-connector:2.0.0.RELEASE'
	compile 'org.springframework.cloud:spring-cloud-cloudfoundry-connector:2.0.0.RELEASE'

//	compile 'com.auth0:auth0-spring-security-api:1.0.0-rc.3'

	runtime('mysql:mysql-connector-java')

	testCompile('org.springframework.boot:spring-boot-starter-test')

	testCompile(
			"org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}",
			"com.nhaarman:mockito-kotlin:1.5.0",
			"org.springframework.boot:spring-boot-starter-test",
			"org.junit.platform:junit-platform-launcher:1.0.1"
	)

	testRuntime(
			"org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}",
			"org.junit.vintage:junit-vintage-engine:${junitVintageVersion}",
			"org.junit.platform:junit-platform-launcher:${junitPlatformVersion}",
			"org.junit.platform:junit-platform-runner:${junitPlatformVersion}"
	)
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
